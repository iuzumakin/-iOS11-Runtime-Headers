/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/ARKit.framework/ARKit
 */

@interface ARFaceLightEstimationTechnique : ARTechnique {
    float  _confidenceRating;
    struct FLEOptions { 
        int smoothing; 
        int maxSHDegree; 
        float lightIntensityMinimumConstraint; 
        bool ransacEnabled; 
        bool chromaEnabled; 
        int ransacMinSampleSet; 
        float ransacErrorThreshold; 
        bool darkBehindHead; 
    }  _faceLightEstimationOptions;
    struct shared_ptr<acv::vision::algorithms::FacialLightEstimation> { 
        struct FacialLightEstimation {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  _faceLightEstimator;
    float  _lightIntensity;
    struct __CVBuffer { } * _pixelBufferRef;
    NSObject<OS_dispatch_semaphore> * _resultSemaphore;
    float  _sphericalHarmonics;
    bool  _sphericalHarmonicsInitialized;
    float  _temperature;
}

+ (struct ImageViewT<unsigned char> { struct shared_ptr<acv::graphics::ImageBuffer<unsigned char> > { struct ImageBuffer<unsigned char> {} *x_1_1_1; struct __shared_weak_count {} *x_1_1_2; } x1; })_cvPixelBufferToACVGray:(struct __CVBuffer { }*)arg1;
+ (struct shared_ptr<acv::vision::algorithms::FaceTrackingData> { struct FaceTrackingData {} *x1; struct __shared_weak_count {} *x2; })_transformFaceTrackingData:(id)arg1;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_computeLightIntensity:(float)arg1 exposureDuration:(double)arg2;
- (void)dealloc;
- (id)init;
- (id)processData:(id)arg1;
- (void)requestResultDataAtTimestamp:(double)arg1 context:(id)arg2;
- (unsigned long long)requiredSensorDataTypes;

@end
